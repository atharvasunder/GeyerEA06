function [value, isterminal, direction] = events(t, y, y_land, beta_old, beta_new, leg_length, phase)

    x_com = y(1);
    y_com = y(2);

    takeoff_leg_length = sqrt((x_com - beta_old)^2 + y_com^2);   % Gives the instantaneous length of the leg that is going to takeo

    value(1) = y(2) - y_land;   % When y(2) - y_land changes sign and is decreasing, trigger landing event
    value(2) = spring_length - leg_length;  % When spring length = leg length, end stance phase
    value(4) = y(4);    % The moment vy becomes = 0, trigger event

    isterminal(1) = 1;       % Stop the integration when event occurs
    isterminal(2) = 1;
    isterminal(4) = 1;

    direction(1) = -1;        % Detects zero-crossings only when the event function is decreasing, i.e., when it crosses zero from positive to negative.
    direction(2) = 1;
    direction(4) = -1;  % Detects zero-crossings only when the event function is decreasing, i.e., when it crosses zero from positive to negative.

end